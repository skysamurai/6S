// /*Следующая функция возвращает true, если параметр age больше 18.
// В ином случае она запрашивает подтверждение через confirm и возвращает его результат:*/
// function checkAge(age) {
//   if (age > 18) {
//     return true;
//   } else {
//     // ...
//     return confirm('Родители разрешили?');
//   }
// }

// //Будет ли эта функция работать как-то иначе, если убрать else? 
// function checkAge(age) {
//   if (age > 18) {
//     return true;
//   }
//   // ...
//   return confirm('Родители разрешили?');
// }
// //Есть ли хоть одно отличие в поведении этого варианта?

// // Функции будут работать одинаково


// /* Следующая функция возвращает true, если параметр age больше 18.
// В ином случае она задаёт вопрос confirm и возвращает его результат.*/

// function checkAge(age) {
//   if (age > 18) {
//     return true;
//   } else {
//     return confirm('Родители разрешили?');
//   }
// }

// /*Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.
// Сделайте два варианта функции checkAge:
// Используя оператор ?
// Используя оператор || */

// function checkAge(age) {
// 	return ((age > 18) ? true : confirm('Родители разрешили?'))
//   }

// 	function checkAge(age) {
// 		return ((age > 18) || confirm('Родители разрешили?'))
// 	}

// // Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.
// function min(a,b) {
// 	return (a < b ? a : b)
// }


// /* Напишите функцию pow(x,n), которая возводит x в степень n и возвращает результат.
// Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).*/
let x = prompt ('ВВедите число')
let n = prompt ('Введите степень')

function pow(x,n) {
	return x ** n
}

if (n >= 1 && n % 1 == 0) {
  alert( pow(x, n) );
} else {
  alert(`Неверная степень ${n}`);
}